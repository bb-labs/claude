import bb from '../../tensor/index.mjs'
import jest from '../index.mjs'

export default jest.suite(function () {

    console.log('\n\n-------- Complex Suite --------\n\n')

    const A = bb.tensor([
        [[10, 2]],
        [[40, 3]],
        [[50, 1]],
    ])

    const B = bb.tensor([
        [[2, 2], [7, 9], [3, 5], [5, 8], [3, 4], [5, 6], [0, 7], [5, 9], [6, 0], [1, 6], [7, 9], [5, 7], [1, 9], [6, 6], [0, 8], [6, 8], [1, 4], [1, 0], [2, 1], [6, 9], [0, 6], [3, 4], [8, 6], [1, 0], [0, 2], [3, 7], [0, 7], [9, 6], [3, 5], [2, 4], [1, 7], [7, 8], [6, 2], [6, 8], [4, 7], [9, 1], [8, 6], [5, 2], [1, 2], [5, 2], [8, 7], [7, 0]],
        [[6, 4], [8, 0], [4, 0], [8, 7], [2, 0], [9, 8], [8, 7], [3, 7], [8, 6], [5, 0], [2, 1], [7, 5], [8, 6], [7, 4], [7, 7], [4, 8], [6, 6], [0, 3], [6, 1], [2, 6], [1, 6], [2, 8], [1, 9], [1, 3], [2, 2], [1, 6], [6, 0], [6, 6], [0, 2], [8, 7], [8, 9], [4, 6], [7, 4], [3, 2], [7, 1], [7, 4], [7, 6], [5, 3], [4, 5], [9, 1], [5, 2], [3, 0]],
    ])

    const C = bb.tensor([[[0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1]]])

    const D = bb.tensor([
        [[0], [1], [2], [3], [4]],
        [[0], [1], [2], [3], [4]],
        [[0], [1], [2], [3], [4]],
        [[0], [1], [2], [3], [4]],
        [[0], [1], [2], [3], [4]],
    ])


    const E = bb.tensor([1, 8])
    const F = bb.tensor([[[0]], [[1]], [[2]], [[3]], [[4]]])

    const G = bb.tensor([
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]],
        [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]
    ])

    const H = bb.tensor([[[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]]])

    const I = bb.tensor([[[1, 1], [4, 6], [2, -5]]])
    const J = bb.tensor([[[7, -1], [2, 1], [5, -9]]])

    const K = bb.tensor([
        [[5, 3], [4, 2], [4, 8], [9, 7]],
        [[4, 7], [9, 2], [4, 4], [4, 8]],
        [[3, 1], [4, 3], [5, 1], [7, 7]],
        [[4, 5], [7, 3], [3, 5], [7, 3]]])

    const L = bb.tensor([[[6, 1], [4, 0], [4, 4], [3, 1]], [[1, 5], [0, 1], [2, 4], [3, 9]], [[7, 8], [5, 4], [3, 6], [7, 9]], [[7, 1], [2, 3], [9, 2], [2, 2]]])


    const N = bb.tensor([[[1, 0], [2, 0], [4, 1], [2, 3]], [[4, 3], [4, 3], [0, 2], [4, 1]], [[0, 4], [1, 0], [0, 1], [1, 4]], [[0, 1], [1, 4], [0, 2], [2, 0]]])

    const O = bb.tensor([[[1, 3], [0, 4]], [[2, 1], [3, 3]]])
    const P = bb.tensor([[[0, 4], [0, 4], [2, 2], [0, 1], [3, 4]], [[1, 2], [1, 3], [4, 0], [2, 4], [0, 3]], [[3, 3], [4, 1], [3, 0], [3, 3], [0, 1]], [[0, 3], [3, 3], [0, 1], [1, 4], [2, 1]], [[2, 2], [4, 4], [3, 3], [3, 4], [1, 1]]])


    console.log('\n\n-------- End Complex Suite --------\n\n')
})
